# cspell:ignore читатель библиотека очередь дипломник заочник аспирант дипломников датакласс датаклассы

from random import randint as случайное_целое_число
from queue import Queue as Очередь

from numpy.random import choice as случайно_выбрать
from моделирование_систем.датаклассы import Читатель
from моделирование_систем.параметры import параметры


class БиблиотекаСистема:
    def __init__(этот, макс_размер_очереди=0):
        этот.очередь = Очередь(maxsize=макс_размер_очереди)
        этот.обработано_дипломников = 0
        этот.обслужено_без_очереди = 0

    def обработка_студента(этот):
        Ts = параметры.Ts
        To = параметры.To
        Tz = параметры.Tz
        Tp = параметры.Tp
        Tp = параметры.Tk
        Tu = параметры.Tu
        Tv = параметры.Tv

        общее_время = To + Tz + Tp + Ts + Tp + Tu + Tv * 60
        return общее_время

    def моделировать_день(этот, Rm, R_начало, R_часы=10):
        текущее_время_минуты = 0
        конечное_время_минуты = R_часы * 60

        while текущее_время_минуты < конечное_время_минуты:
            if not этот.очередь.full():
                текущее_время_минуты += параметры.Tn

                if (текущее_время_минуты < конечное_время_минуты) and (
                    Rm * 60 - (R_начало * 60 + текущее_время_минуты)
                ) < 0:
                    вероятности_типа_читателя = [
                        0.1,
                        0.2,
                        0.4,
                        0.3,
                    ]  # Вероятности для студентов, аспирантов, дипломников и заочников
                    выбор_типа_читателя = случайно_выбрать(
                        ["студент", "аспирант", "дипломник", "заочник"], p=вероятности_типа_читателя
                    )

                    новый_читатель = Читатель(время_прихода=текущее_время_минуты, тип=выбор_типа_читателя)

                    этот.очередь.put(новый_читатель)
                else:
                    новый_читатель = Читатель(время_прихода=текущее_время_минуты, тип="студент")
                    этот.очередь.put(новый_читатель)
                    этот.обслужено_без_очереди += 1

            if not этот.очередь.empty():
                читатель: Читатель = этот.очередь.get()

                if читатель.тип == "студент":
                    время_обслуживания_секунды = этот.обработка_студента()

                else:
                    if not случайное_целое_число(0, 1):
                        Ta_секунды = параметры.Ta
                        Tc_секунды = параметры.Tc
                        время_обслуживания_секунды = Ta_секунды + Tc_секунды
                    else:
                        время_обслуживания_секунды = этот.обработка_студента()

                    if читатель.тип == "дипломник":
                        этот.обработано_дипломников += 1

                # Преобразуем время из секунд в минуты и добавляем к текущему времени
                текущее_время_минуты += время_обслуживания_секунды / 60

            print(f"Читатель {читатель.тип.upper()} пришел в {читатель.время_прихода:.2f} минут")
            print(f"Текущее время моделирования: {текущее_время_минуты:.2f} минут\n")


if __name__ == "__main__":
    библиотека = БиблиотекаСистема(макс_размер_очереди=20)
    библиотека.моделировать_день(Rm=10, R_начало=9, R_часы=12)

    print(f"Всего дипломников обслужено: {библиотека.обработано_дипломников}")
    print(f"Студентов обслужено без очереди: {библиотека.обслужено_без_очереди}")
